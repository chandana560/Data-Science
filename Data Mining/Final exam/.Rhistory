setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
data = read.csv("apriori_data.csv", header = TRUE);
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
data = read.csv("apriori_data.csv", header = TRUE);
getwd()
data = read.csv("aprioridata.csv", header = TRUE);
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
data <- read.csv("Apriori_data.csv")
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam\\")
data <- read.csv("Apriori_data.csv")
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
data <- read.csv("Apriori_data.csv", header = FALSE)
data <- read.csv("Bse.csv", header = FALSE)
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
data = read.csv("Apriori_data.csv", header = FALSE)
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
data = read.csv("Apriori_Data.csv", header = TRUE)
str(data)
data$TID <- NULL
library(arules)
library('arules')
install.packages("arules")
write.csv(data, "FreqItem.csv", quote = FALSE, row.names = TRUE)
txn = read.transactions("FreqItem.csv", sep=',', rm.duplicates = TRUE)
txn <- read.transactions("FreqItem.csv", sep=',', rm.duplicates = TRUE)
library("arules")
transaction <- read.transactions("FreqItem.csv", sep=',', rm.duplicates = TRUE)
inspect(transaction)
frequent_itemsets <- apriori(transaction, parameter = list(sup = 0.03, conf = 0.5,target="frequent itemsets"))
inspect(sort(frequent_itemsets)[1:15])
itemFrequencyPlot(txn, topN = 5)
itemFrequencyPlot(transaction, topN = 5)
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
str(liver)
liver$selector <- as.factor(liver$selector)
liver$drinks <- cut(liver$drinks, breaks = c(0, 5,10,15,20), labels = c('C1', 'C2', "C3", 'C4'), right = FALSE)
liver <- na.omit(liver)
train = subset(liver, liver$selector == 1)
str(train)
test = subset(liver, liver$selector == 2)
str(test)
dim(train)
dim(test)
x_train <- subset(train, select = -c(selector, drinks))
library(kknn)
library(knn)
install.package("kknn")
install.packages("kknn")
library(kknn)
library(class)
y_train = train[,6, drop = TRUE]
y_test = train[,6, drop = TRUE]
length(train)
length(test)
#SVM
#For training
fit = svm(x_train, y_train)
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
str(liver)
liver$selector <- as.factor(liver$selector)
liver$drinks <- cut(liver$drinks, breaks = c(0, 5,10,15,20), labels = c('C1', 'C2', "C3", 'C4'), right = FALSE)
liver <- na.omit(liver)
train = subset(liver, liver$selector == 1)
str(train)
test = subset(liver, liver$selector == 2)
str(test)
dim(train)
dim(test)
x_train <- subset(train, select = -c(selector, drinks))
x_test <- subset(train, select = -c(selector, drinks))
library(class)
y_train = train[,6, drop = TRUE]
y_test = train[,6, drop = TRUE]
length(train)
length(test)
library(e1071)
#SVM
#For training
fit = svm(x_train, y_train)
1-sum(y_train==predict(fit,x_train))/length(y_train)
fit = svm(x_test, y_test)
1-sum(y_test==predict(fit,x_test))/length(y_test)
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
str(liver)
liver$selector <- as.factor(liver$selector)
liver$drinks <- cut(liver$drinks, breaks = c(0, 5,10,15,20), labels = c('C1', 'C2', "C3", 'C4'), right = FALSE)
liver <- na.omit(liver)
train = subset(liver, liver$selector == 1)
str(train)
test = subset(liver, liver$selector == 2)
str(test)
dim(train)
dim(test)
x_train <- subset(train, select = -c(selector, drinks))
x_test <- subset(train, select = -c(selector, drinks))
library(class)
y_train = train[,6, drop = TRUE]
y_test = train[,6, drop = TRUE]
length(train)
length(test)
#k = 1
fit1 = knn(x_train,x_train,y_train,k=1)
1-sum(y_test==fit1)/length(y_test)
#K = 2
fit2 = knn(x_train,x_train,y_train,k=2)
1-sum(y_test==fit2)/length(y_test)
#K = 2
fit3 = knn(x_train,x_train,y_train,k=3)
1-sum(y_test==fit3)/length(y_test)
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
liver = read.csv("Liver_data.csv", header = FALSE, col.names = c("mcv", "alkphos", "sgpt", "sgot", "gammagt", "drinks","selector"))
str(liver)
liver$selector <- as.factor(liver$selector)
liver$drinks <- cut(liver$drinks, breaks = c(0, 5,10,15,20), labels = c('C1', 'C2', "C3", 'C4'), right = FALSE)
liver <- na.omit(liver)
train = subset(liver, liver$selector == 1)
str(train)
test = subset(liver, liver$selector == 2)
str(test)
dim(train)
dim(test)
x_train <- subset(train, select = -c(selector, drinks))
x_test <- subset(train, select = -c(selector, drinks))
library(class)
y_train = train[,6, drop = TRUE]
y_test = train[,6, drop = TRUE]
length(train)
length(test)
#k = 1
fit1 = knn(x_train,x_train,y_train,k=1)
1-sum(y_train==fit1)/length(y_train)
#K = 2
fit2 = knn(x_train,x_train,y_train,k=2)
1-sum(y_train==fit2)/length(y_train)
#K = 2
fit3 = knn(x_train,x_train,y_train,k=3)
1-sum(y_train==fit3)/length(y_train)
#misclassification for test
#k=1
fit1 = knn(x_test,x_test,y_test,k=1)
1-sum(y_test==fit1)/length(y_test)
#k=2
fit2 = knn(x_test,x_test,y_test,k=2)
1-sum(y_test==fit2)/length(y_test)
fit3 = knn(x_test,x_test,y_test,k=3)
1-sum(y_test==fit3)/length(y_test)
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
data = read.csv("BSE_Sensex_Index.csv",header = FALSE)
data$diffV2 <- c(0, diff(data$V2))
data$diffV3 <- c(0, diff(data$V3))
data$diffV2 <- c(0, diff(as.numeric(data$V2))))
data$diffV2 <- c(0, diff(as.numeric(data$V2)))
data$diffV2 <- c(0, diff(suppressWarnings(as.numeric(data$V2))))
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
data = read.csv("BSE_Sensex_Index.csv",header = FALSE)
data$diffV2 <- c(0, diff(suppressWarnings(as.numeric(data$V2))))
data$diffV3 <- c(0, diff(suppressWarnings(as.numeric(data$V3))))
data$diffV4 <- c(0, diff(suppressWarnings(as.numeric(data$V4))))
data$diffV5 <- c(0, diff(suppressWarnings(as.numeric(data$V5))))
data$diffV6 <- c(0, diff(suppressWarnings(as.numeric(data$V6))))
data$diffV7 <- c(0, diff(suppressWarnings(as.numeric(data$V7))))
sample1 = sample(seq(1,length(data$V2)),1000,replace = T)
sample2 = sample(seq(1,length(data$V2)),3000,replace = T)
#Column - 8 (V2)
sampleV2_1 = data[sample1,8]
mean(sampleV2_1)
max(sampleV2_1)
var(sampleV2_1)
quantile(sampleV2_1,.25)
sampleV2_2 = data[sample2,8]
mean(sampleV2_2)
max(sampleV2_2)
var(sampleV2_2)
quantile(sampleV2_2,.25)
#Column - 9 (V3)
sampleV3_1 = data[sample1,9]
mean(sampleV3_1)
max(sampleV3_1)
var(sampleV3_1)
quantile(sampleV3_1,.25)
sampleV3_2 = data[sample2,9]
mean(sampleV3_2)
max(sampleV3_2)
var(sampleV3_2)
quantile(sampleV3_2,.25)
#Column - 10 (V4)
sampleV4_1 = data[sample1,10]
#Column - 10 (V4)
sampleV4_1 = data[sample1,10]
mean(sampleV4_1)
max(sampleV4_1)
var(sampleV4_1)
quantile(sampleV4_1,.25)
sampleV4_2 = data[sample2,10]
mean(sampleV4_2)
max(sampleV4_2)
var(sampleV4_2)
quantile(sampleV4_2,.25)
#Column - 11 (V5)
sampleV5_1 = data[sample1,11]
mean(sampleV5_1)
max(sampleV5_1)
var(sampleV5_1)
quantile(sampleV5_1,.25)
sampleV5_2 = data[sample2,11]
mean(sampleV5_2)
max(sampleV5_2)
var(sampleV5_2)
quantile(sampleV5_2,.25)
#Column - 12 (V6)
sampleV6_1 = data[sample1,12]
mean(sampleV6_1)
max(sampleV6_1)
var(sampleV6_1)
quantile(sampleV6_1,.25)
sampleV6_2 = data[sample2,12]
mean(sampleV6_2)
max(sampleV6_2)
var(sampleV6_2)
quantile(sampleV6_2,.25)
#Column - 13 (V7)
sampleV7_1 = data[sample1,13]
mean(sampleV7_1)
max(sampleV7_1)
var(sampleV7_1)
quantile(sampleV7_1,.25)
sampleV7_2 = data[sample2,13]
mean(sampleV7_2)
max(sampleV7_2)
var(sampleV7_2)
quantile(sampleV7_2,.25)
#Column 8
mean(data$diffV2)
max(data$diffV2)
var(data$diffV2)
quantile(data$diffV2,.25)
#how much they differ?
abs(mean(sampleV2_1)-mean(data$diffV2))
abs(max(sampleV2_1)-max(data$diffV2))
abs(var(sampleV2_1)-var(data$diffV2))
abs(quantile(sampleV2_1,.25)-quantile(data$diffV2,.25))
abs(mean(sampleV2_2)-mean(data$diffV2))
abs(max(sampleV2_2)-max(data$diffV2))
abs(var(sampleV2_2)-var(data$diffV2))
abs(quantile(sampleV2_2,.25)-quantile(data$diffV2,.25))
#Column 9
mean(data$diffV3)
max(data$diffV3)
var(data$diffV3)
quantile(data$diffV3,.25)
#how much they differ?
abs(mean(sampleV3_1)-mean(data$diffV3))
abs(max(sampleV3_1)-max(data$diffV3))
abs(var(sampleV3_1)-var(data$diffV3))
abs(quantile(sampleV3_1,.25)-quantile(data$diffV3,.25))
abs(mean(sampleV3_2)-mean(data$diffV3))
abs(max(sampleV3_2)-max(data$diffV3))
abs(var(sampleV3_2)-var(data$diffV3))
abs(quantile(sampleV3_2,.25)-quantile(data$diffV3,.25))
#Column 10
mean(data$diffV4)
max(data$diffV4)
var(data$diffV4)
quantile(data$diffV4,.25)
#how much they differ?
abs(mean(sampleV4_1)-mean(data$diffV4))
abs(max(sampleV4_1)-max(data$diffV4))
abs(var(sampleV4_1)-var(data$diffV4))
abs(quantile(sampleV4_1,.25)-quantile(data$diffV4,.25))
abs(mean(sampleV4_2)-mean(data$diffV4))
abs(max(sampleV4_2)-max(data$diffV4))
abs(var(sampleV4_2)-var(data$diffV4))
abs(quantile(sampleV4_2,.25)-quantile(data$diffV4,.25))
#Column 11
mean(data$diffV5)
max(data$diffV5)
var(data$diffV5)
quantile(data$diffV5,.25)
#how much they differ?
abs(mean(sampleV5_1)-mean(data$diffV5))
abs(max(sampleV5_1)-max(data$diffV5))
abs(var(sampleV5_1)-var(data$diffV5))
abs(quantile(sampleV5_1,.25)-quantile(data$diffV5,.25))
abs(mean(sampleV5_2)-mean(data$diffV5))
abs(max(sampleV5_2)-max(data$diffV5))
abs(var(sampleV5_2)-var(data$diffV5))
abs(quantile(sampleV5_2,.25)-quantile(data$diffV5,.25))
#Column 12
mean(data$diffV6)
max(data$diffV6)
var(data$diffV6)
quantile(data$diffV6,.25)
#how much they differ?
abs(mean(sampleV6_1)-mean(data$diffV6))
abs(max(sampleV6_1)-max(data$diffV6))
abs(var(sampleV6_1)-var(data$diffV6))
abs(quantile(sampleV6_1,.25)-quantile(data$diffV6,.25))
abs(mean(sampleV6_2)-mean(data$diffV6))
abs(max(sampleV6_2)-max(data$diffV6))
abs(var(sampleV6_2)-var(data$diffV6))
abs(quantile(sampleV6_2,.25)-quantile(data$diffV6,.25))
#Column 13
mean(data$diffV7)
max(data$diffV7)
var(data$diffV7)
quantile(data$diffV7,.25)
#how much they differ?
abs(mean(sampleV7_1)-mean(data$diffV7))
abs(max(sampleV7_1)-max(data$diffV7))
abs(var(sampleV7_1)-var(data$diffV7))
abs(quantile(sampleV7_1,.25)-quantile(data$diffV7,.25))
abs(mean(sampleV7_2)-mean(data$diffV7))
abs(max(sampleV7_2)-max(data$diffV7))
abs(var(sampleV7_2)-var(data$diffV7))
abs(quantile(sampleV7_2,.25)-quantile(data$diffV7,.25))
boxplot(data$diffV2,
data$diffV3,
data$diffV4,
data$diffV5,
data$diffV6,
data$diffV7
,col = 'blue', main = 'Boxplot', names=c("Open","High", "Low", "Close", "volume", "adj"))
data$c = as.numeric(data$V4)
hist(data$c,breaks=seq(0,20000,by=2000),col='blue',xlab = "Close",ylab = "Frequency",main = "Histogram Plot")
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
data = read.csv("liver_data.csv", header = FALSE, col.names = c("1", "2", "3", "4", "5", "6", "7"))
x<-data[,1:2]
plot(x,pch=19,xlab=expression(x[1]),ylab=expression(x[2]))
fit<-kmeans(x, 4)
points(fit$centers,pch=19,col="blue",cex=2)
library(class)
knnfit<-knn(fit$centers,x,as.factor(c(-1,1)))
points(x,col=1+1*as.numeric(knnfit),pch=19)
setwd("D:\\Msit\\Data-Science\\Data Mining\\Final exam")
data = read.csv("liver_data.csv", header = FALSE, col.names = c("1", "2", "3", "4", "5", "6", "7"))
x<-data[,1:2]
plot(x,pch=19,xlab=expression(x[1]),ylab=expression(x[2]))
fit<-kmeans(x, 4)
points(fit$centers,pch=19,col="blue",cex=2)
library(knn)
install.packages("knn")
library(knn)
library(class)
knnfit<-knn(fit$centers,x,as.factor(c(-1,1)))
points(x,col=1+1*as.numeric(knnfit),pch=19)
